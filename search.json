[
  {
    "objectID": "blog_start.html",
    "href": "blog_start.html",
    "title": "Blog",
    "section": "",
    "text": "Publication-ready tables with flextable and own theme in R\n\n\n\n\n\n\n\nR\n\n\npublication-ready\n\n\ntableone\n\n\nflextable\n\n\ntables\n\n\n\n\n\n\n\n\n\n\n\n\nNov 23, 2021\n\n\nMichael Dismorr\n\n\n\n\n\n\n  \n\n\n\n\nAge-, and sex-adjusted incidence rates\n\n\n\n\n\n\n\nR\n\n\nincidence-rate\n\n\npoisson-regression\n\n\nsurvival-analysis\n\n\n\n\n\n\n\n\n\n\n\nNov 15, 2021\n\n\nMichael Dismorr\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "michaeldismorrmd.github.io",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/age-and-sex-adjusted-incidence-rates/index.html",
    "href": "posts/age-and-sex-adjusted-incidence-rates/index.html",
    "title": "Age-, and sex-adjusted incidence rates",
    "section": "",
    "text": "In this first post I’m going to present a way of obtaining age- and sex-adjusted incidence rates using poisson regression in R. This will be similar to what is done in Stata as described here.\nI’ve written a R function that’s available for download here. The script can be sourced ( source(\"age_sex_adjust.R\") ) and then the function age_sex_adjust() can be used as is. Note that the time variable will have to be in days, and the incidence will be presented as per 100 person-years. The code will also be described step by step below.\n\nThere are, as usual, several ways to calculate adjusted incidence rates in R. I’ve chosen to use the package marginaleffects by Vincent Arel-Bundock, Noah Greifer and Andrew Heiss because it has a lot of nice features and useful implications in causal inference. Specifically, we will use the function avg_predictions() from marginaleffects to generate the the adjusted incidence rates.\nBut first we start off with a little bit of background on what an incidence rate is. It is simply a measure of a number of occurrences (a count) in a population over the total population time. For example, in a population of 10 people, each followed 1 year, there was one case of death. In that population, the incidence rate of death would 1 per 10 person-years. In observational data, we often have larger cohorts with varying follow-up time and censoring. The calculation is of course the same, using the formula below:\n \\[\\text{Incidence rate} = \\frac{\\text{Number of occurrences}}{\\sum_{\\text{Persons}}{\\text{Time in study}}}\\] \n\n\nCalculating crude incidence rate\nTo illustrate, we will now use the colon dataset from the survival package.\n\nlibrary(survival)\nlibrary(dplyr)\nlibrary(broom)\n\nRunning ?survival::colon tells us the following:\n\nData from one of the first successful trials of adjuvant chemotherapy for colon cancer\n\n\n\n\n\n\n\n\nVariable\nExplanation\n\n\n\n\nid\nPatient id\n\n\nstudy\n1 for all patients\n\n\nrx\n1 for all patients\n\n\nsex\n1 = male\n\n\nage\nin years\n\n\nobstruct\ncolon obstruction by tumour\n\n\nperfor\nperformation of colon\n\n\nadhere\nadherence to nearby organs\n\n\nnodes\nnumber of positive lymph nodes\n\n\ntime\ndays until event or censoring\n\n\nstatus\ncensoring status\n\n\ndiffer\ntumour differentiation — 1 = well, 2 = moderate, 3 = poor\n\n\nextent\nextent of local spread — 1 = submucosa, 2 = muscle, 3 = serosa, 4 = continious\n\n\nsurg\ntime from surgery to registration — 0 = short, 1 = long\n\n\nnode4\nmore than 4 positive lymph nodes\n\n\netype\nevent type — 1 = recurrence, 2 = death\n\n\n\nOK, so now that we understand the data, let’s start calculating crude incidence rates for death among the different treatment groups:\n\n# Using the colon dataset from the survival package\n\n# Only keep records related to the death outcome\ncolon_death &lt;- survival::colon %&gt;% dplyr::filter(etype == 2) \n\n# Time is divided by 365.25/100 to get the time in days \n# first to years, then to 100 person-years\n\ncolon_death %&gt;% group_by(rx) %&gt;% \n                summarise(Events = sum(status), \n                          Time = sum(time/365.25/100), \n                          Rate = Events / Time, \n                          lower = poisson.test(Events, Time)$conf.int[1], \n                          upper = poisson.test(Events, Time)$conf.int[2])\n\n# A tibble: 3 × 6\n  rx      Events  Time  Rate lower upper\n  &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Obs        168  13.8 12.2  10.4  14.2 \n2 Lev        161  13.7 11.7  10.0  13.7 \n3 Lev+5FU    123  15.0  8.22  6.83  9.80\n\n\nNow we compare to the calculated rates with rates obtained from the survRate() function from the biostat3 package:\n\nlibrary(biostat3)\nsurvRate(Surv(time/365.25/100, status) ~ rx, data = colon_death) %&gt;% \n  dplyr::select(rx, event, tstop, rate, lower, upper) %&gt;% \n  as_tibble() %&gt;% \n  dplyr::rename(Events = event, \n                Time = tstop, \n                Rate = rate)\n\n# A tibble: 3 × 6\n  rx      Events  Time  Rate lower upper\n  &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Obs        168  13.8 12.2  10.4  14.2 \n2 Lev        161  13.7 11.7  10.0  13.7 \n3 Lev+5FU    123  15.0  8.22  6.83  9.80\n\n\nGood, the incidence rates are identical. The observational patients had an mortality incidence rate of 12.2 per 100 person-years, compared to the Lev+5-FU treated patients with an incidence rate of 8.22 per 100 person-years. Now, let’s try and repeat these results with poisson regression.\n\n\nObtaining estimated incidence rates using poisson regression\nHere we use the broom package tidy() function to obtain exponentiated estimates:\n\n# Fit the model to estimate IRR using offset\npoisson_fit &lt;- glm(status ~ rx + offset(log(time/365.25/100)), \n                   family = poisson, data = colon_death)\n\n# Exponentiate the estimate to obtain IRR\ntidy(poisson_fit, exponentiate = T, conf.int = T)\n\n# A tibble: 3 × 7\n  term        estimate std.error statistic   p.value conf.low conf.high\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)   12.2      0.0772    32.4   3.13e-230   10.4      14.1  \n2 rxLev          0.965    0.110     -0.324 7.46e-  1    0.777     1.20 \n3 rxLev+5FU      0.675    0.119     -3.32  9.16e-  4    0.534     0.850\n\n\nThe Intercept estimate here is the estimated IR for the reference level, i.e. the Obs group.\nTo get estimated IR of Lev+5FU treated:\n\nlev_5fu &lt;- predict(poisson_fit, \n                   newdata = data.frame(rx = \"Lev+5FU\", time = 36525), \n                   type = \"link\", se.fit = T)\n\nas_tibble(lev_5fu) %&gt;% summarise(Treatment = \"Lev+5FU\", \n                                 IR = exp(fit), \n                                 lower = exp(fit - (1.96 * se.fit)), \n                                 upper = exp(fit + (1.96 * se.fit)))\n\n# A tibble: 1 × 4\n  Treatment    IR lower upper\n  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Lev+5FU    8.22  6.88  9.80\n\n\nHere, the confidence interval needs to be calculated on the \\(\\log\\) scale and then exponentiated back. This will cause the confidence interval to not be centered around the estimate.\nA poisson model can model \\(\\log\\text{incidence rates (ratios)}\\) when we use the time variable as an offset. Therefore, we can include covariates in the model to be accounted for, such as age and sex.\n\n\nAge- and sex-adjusted incidence rates using poisson regression\nFirst, we’ll do it using my age_sex_adjust() function\n\nsource(\"age_sex_adjust.R\")\n# Usage: age_sex_adjust(data, group, age, sex, event, time)\n\nage_sex_adjust(colon_death, rx, age, sex, status, time)\n\n  Treatment        IR  Lower_CI  Upper_CI\n1   Lev+5FU  8.245483  6.786784  9.704182\n2       Obs 12.211861 10.362612 14.061109\n3       Lev 11.819634  9.990691 13.648577\n\n\nHere we see that the adjusted rates are very similar to the crude rates calculated above. Since this data comes from a randomized trial, this is expected and can be taken as a sign that the randomization worked.\nNow, let’s do the some thing but without using the ready made function to see how it works under the hood.\n\nlibrary(marginaleffects)\n\n# Fit the model using offset to estimate IRR\npoisson_fit &lt;- glm(status ~ rx * I(age^2) + sex + offset(log(as.numeric(time))), \n                   data = colon_death, \n                   family = poisson)\n\n# Create a new dataset where time is converted to 36525 days (100 years)\nnewdat &lt;- colon_death %&gt;% mutate(time = 36525) \n\n# Use avg_predictions to estimate what the incidence rate would have been if \n# the entire population would have been treated according to each level of rx\nresult &lt;- avg_predictions(poisson_fit, \n                          variables = \"rx\", \n                          newdata = transform(colon_death, time = 36525), \n                          type = \"response\")\n\nresult %&gt;% dplyr::select(rx, estimate, conf.low, conf.high)\n\n\n Estimate CI low CI high\n     8.25   6.79     9.7\n    12.21  10.36    14.1\n    11.82   9.99    13.6\n\nColumns: rx, estimate, conf.low, conf.high \n\n\nThe numbers are identical to the ones obtained from the age_sex_adjust() function, which is logical since we did the same thing as the function does.\nA few finishing notes. Here I included age as a quadratic term, and as an interaction with exposure. These are modeling decisions one will have to take, however the model could have been only a main effects model such as:\n \\[\\log\\lambda = \\beta_0 + \\beta_1\\text{rxLev} + \\beta_2\\text{rxLev+5FU} + \\beta_3\\text{age} + \\beta_4\\text{sex}\\]  Regarding the interaction term, a good explanation was given in the Stata forum in this post.\nFor anyone who wants to read more, I recommend the course material from the PhD course Biostatistics III at Karolinska Institutet, available here."
  },
  {
    "objectID": "posts/publication-ready-tables-with-flextable-and-own-theme/index.html",
    "href": "posts/publication-ready-tables-with-flextable-and-own-theme/index.html",
    "title": "Publication-ready tables with flextable and own theme in R",
    "section": "",
    "text": "In this post, I will show you how to make publication-ready using a combination of the flextable package and a function I’ve written to customize them according to my default layout. This will minimize the need to edit in MS Word, and copy and paste from Excel to Word when exporting tables from R. In this example, I will use the tableone package to show how my customtab() function can be used to export Table 1.\nThe flextable package is a great package to generate word tables from R output. Together with the officer package from the same creator, it allows you to make most of the customization needed immediately in R, and thus let’s you skip this potentially annoying step in MS Word. The tableone package is a great package for, you guessed it, generating Table 1s. It allows for p-value calculations, SMDs, and generally just the output that you need.\nFor demonstration, I will use the gbsg dataset from the from the survival package. If you just want to try out the customtab() function, it can be downloaded here.\nOK, let’s begin!\n\nlibrary(survival) # only needed for the dataset in this example\nlibrary(dplyr) # to modify the needed dataframe\nlibrary(tibble) # for rownames_to_column() function\nlibrary(stringr) # for str_squish()\nlibrary(flextable)\nlibrary(officer)\nlibrary(forcats)\nlibrary(tableone)\nsource(\"customtab.R\")\n\nLoad the dataset:\n\nbreast &lt;- survival::gbsg\n\nRunning ?survival::gbsg gives:\n\nThe gbsg data set contains patient records from a 1984 — 1989 trial conducted by the German Breast Cancer Study Group (GBSG) of 720 patients with node positive cancer…\n\n\n\n\nVariable\nExplanation\n\n\n\n\npid\nPatiend ID\n\n\nage\nAge in years\n\n\nmeno\nMenopausal staus - 0 = premenopaus, 1 = postmenopaus\n\n\nsize\ntumor size\n\n\ngrade\ntumor grade\n\n\nnodes\nnumber of positive lymph nodes\n\n\npgr\nprogesterone receptors (fmol/L)\n\n\ner\nestrogen receptors (fmol/L)\n\n\nhormon\nhormone therapy - 0 = no, 1 = yes\n\n\nrfstime\nrecurrence free survival time in days\n\n\nstatus\n0 = alive without recurrence, 1 = recurrence or death\n\n\n\nSelect variables included in Table 1.\n\nvariables &lt;- names(breast)\n\nbreast &lt;- breast %&gt;% select(all_of(variables)) %&gt;% \n  select(-pid, -rfstime, -status)\n\nbreast &lt;- breast %&gt;% mutate(meno = as_factor(meno), \n                            grade = as_factor(grade), \n                            hormon = as_factor(hormon))\n\nRename the variables as they should appear in the table. While tableone can add explanation for you, I genereally prefer to type them out myself to keep track of what I actually want to get (e.g. is it mean or median?)\n\nbreast &lt;- breast %&gt;% rename(`Age, years (mean (SD))` = age, \n                             Postmenopausal = meno, \n                             `Tumor size, mm (mean (SD)` = size, \n                             `Tumor grade` = grade, \n                             `Positive lymph nodes, (n)` = nodes, \n                             `Progesterone receptors, fmol/L (median [IQR])` = pgr, \n                             `Estrogen receptors, fmol/L (median [IQR])` = er, \n                             `Hormone treatment` = hormon)\n\nRelabel hormon variable to more text friendly labels\n\nbreast$`Hormone treatment` &lt;- breast$`Hormone treatment` %&gt;% \n  fct_recode(Treated = \"1\", Placebo = \"0\")\n\nSelect all variables and specify categorical variables for tableone\n\n# All variables excluding the group variable\nmyVars &lt;- breast %&gt;% select(-`Hormone treatment`) %&gt;% names() \n\n# All categorical variables\ncatVars &lt;-  breast %&gt;% select(where(is.factor)) %&gt;% \n  dplyr::select(-`Hormone treatment`) %&gt;% names()\n\nCreate Table 1 object\n\ntab1 &lt;- breast %&gt;% CreateTableOne(vars = myVars, \n                   data = . , \n                   factorVars = catVars, \n                   strata = \"Hormone treatment\", \n                   addOverall = T, \n                   test = T)\n\nPrint Table 1 object to control output, e.g. remove missing, print non-normal variables correctly etc.\n\ntab1_word &lt;- print(tab1, \n                   nonnormal = c(\"Progesterone receptors, fmol/L (median [IQR])\", \n                                 \"Estrogen receptors, fmol/L (median [IQR])\"),\n                   quote = F, \n                   noSpaces = T, \n                   # smd = T, \n                   # missing = T, \n                   test = F, \n                   contDigits = 1, \n                   printToggle = F,\n                   dropEqual = T, \n                   explain = F)\n\ncustom_tab() needs a dataframe as argument, so first we convert the tableone object\n\n# Convert to dataframe\ntab1_df &lt;- as.data.frame(tab1_word) %&gt;% rownames_to_column(var = \"Variable\")\n\nUse custom_tab() to export the MS Word table.\nImportant: run customtab_defaults() before using the custom_tab() function to get correct formatting\n\n# Rename first variable from n to No.\ntab1_df$Variable[1] &lt;- \"No.\"\n\n# Set Table header\nheader &lt;- str_squish(str_remove(\"Table 1. Baseline characteristics of 686 \n                                patients enrolled in the German Breast Cancer Study Group \n                                between 1984 and 1989\", \"\\n\"))\n\n# Set Table footer\nfooter &lt;- str_squish(str_remove(\"Numbers are No. (%) unless otherwise noted. \n                                SD = standard deviation, fmol/L = femtomole per liter, \n                                IQR = interquartile range\", \"\\n\"))\n\n# Set custom_tab() defaults\ncustomtab_defaults()\n\n# Create the flextable object\nflextable_1 &lt;- custom_tab(tab1_df, header, footer)\n\nflextable_1\n\n\nTable 1. Baseline characteristics of 686 patients enrolled in the German Breast Cancer Study Group between 1984 and 1989VariableOverallPlaceboTreatedNo.686440246Age, years (mean (SD))53.1 (10.1)51.1 (10.0)56.6 (9.4)Postmenopausal396 (57.7)209 (47.5)187 (76.0)Tumor size, mm (mean (SD)29.3 (14.3)29.6 (14.4)28.8 (14.1)Tumor grade   181 (11.8)48 (10.9)33 (13.4)   2444 (64.7)281 (63.9)163 (66.3)   3161 (23.5)111 (25.2)50 (20.3)Positive lymph nodes, (n)5.0 (5.5)4.9 (5.6)5.1 (5.3)Progesterone receptors, fmol/L (median [IQR])32.5 [7.0, 131.8]32.0 [7.0, 130.0]35.0 [7.2, 133.0]Estrogen receptors, fmol/L (median [IQR])36.0 [8.0, 114.0]32.0 [8.0, 92.2]46.0 [9.0, 182.5]Numbers are No. (%) unless otherwise noted. SD = standard deviation, fmol/L = femtomole per liter, IQR = interquartile range\n\n\nSave the resulting table as .docx\n\n# Save as word .docx\nsave_as_docx(flextable_1, path = \"flextab_1.docx\", \n             pr_section = \n               prop_section(page_size = page_size(orient = \"portrait\"), \n                                       type = \"continuous\"))\n\nThis will generate the following MS Word Table:\n\n\n\nCustom Table\n\n\nThe customtab_defaults() function simply sets some defaults for your tables, and can be changed to match the requirements of the journal you will be submitting to\n\ncustomtab_defaults &lt;- function(){\n  set_flextable_defaults(font.family = \"Calibri\", \n  font.size = 10, \n  border.color = \"black\")\n}\n\nThe custom_tab() function looks like this\n\n######### Create default BioAVR table from dataframe\n#\n# Dependencies : dplyr, flextable, officer\n#      \ncustom_tab &lt;- function(df, header, footer){\n  flextable(df) %&gt;% \n    add_header_lines(header) %&gt;% \n    add_footer_lines(footer) %&gt;% \n    bold(i = 1, part = \"header\") %&gt;% \n    hline_top(part = \"header\", \n              border = fp_border(color = \"red\", \n                                 width = 3, \n                                 style = \"solid\")) %&gt;% \n    hline(i = 1, \n          part = \"header\", \n          border = fp_border(color = \"black\", \n                             width = 0.25, \n                             style = \"solid\")) %&gt;% \n    hline_top(part = \"body\", \n              border = fp_border(color = \"black\", \n                                 width = 0.25, \n                                 style = \"solid\")) %&gt;% \n    hline_bottom(part = \"body\", \n                 border = fp_border(color = \"black\", \n                                    width = 0.25, \n                                    style = \"solid\")) %&gt;% \n    hline_bottom(part = \"footer\", \n                 border = fp_border(color = \"black\", \n                                    width = 0.25, \n                                    style = \"solid\")) %&gt;% \n    border_inner_h(part = \"body\", \n                   border = fp_border(color = \"black\", \n                                      width = 0.25, \n                                      style = \"dotted\")) %&gt;% \n    autofit(part = \"body\") %&gt;% \n    bg(part = \"body\", bg = \"#f5f5f5\") %&gt;% \n    align(part = \"all\", align = \"center\") %&gt;% \n    align(j = 1, part = \"all\", align = \"left\")\n}\n\nWhat it does is:\n1. Add header and footer\n2. Make header bold\n3. Adds red and black border for header\n4. Adds black borders for footer\n5. Adds dotted borders for body content\n6. Adds gray background to body\nThis is a standard design I go for in my tables, but it can of course be changed to your own or journal specific requirements. While flextable allows output to other formats as well, I generally only use this for MS Word output. The reason is that I’ve noticed problems with the borders when outputting to pdf or image formats."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Michael Dismorr",
    "section": "",
    "text": "I am a M.D., PhD and postdoctoral researcher at Karolinska Institutet in the cardiothoracic surgery research group.\nHere I will primarily post guides and tutorials related to epidemiology in R. Topics will range from survival analysis with regression standardization and inverse probability of treatment weighting (IPTW) to more workflow related guides. Feel free to reach out with comments or suggestions.\nFor more content like this, check out R-bloggers."
  },
  {
    "objectID": "about.html#about",
    "href": "about.html#about",
    "title": "Michael Dismorr",
    "section": "",
    "text": "I am a M.D., PhD and postdoctoral researcher at Karolinska Institutet in the cardiothoracic surgery research group.\nHere I will primarily post guides and tutorials related to epidemiology in R. Topics will range from survival analysis with regression standardization and inverse probability of treatment weighting (IPTW) to more workflow related guides. Feel free to reach out with comments or suggestions.\nFor more content like this, check out R-bloggers."
  },
  {
    "objectID": "about.html#intrests",
    "href": "about.html#intrests",
    "title": "Michael Dismorr",
    "section": "Intrests",
    "text": "Intrests\n\nR programming\nBiostatistics\nSurvival analysis\nGlobal health\nMedTech\nAI"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Michael Dismorr",
    "section": "Experience",
    "text": "Experience\nPostdoctoral researcher | 2022 - Current\nKarolinska Institutet | Stockholm, Sweden\nCo-founder | 2022 - Current\nDismorr Medical Ltd. | Nairobi, Kenya\nPhD student | 2017 - 2022\nKarolinska Institutet | Stockholm, Sweden\nSurgeon, licensed physician | 2018 - 2020\nKarolinska University Hospital, Dept. Cardiothoracic surgery | Stockholm, Sweden\nMedical internship | 2017 - 2018\nKarolinska University Hospital | Stockholm, Sweden\nJunior surgeon | 2016 - 2017\nKarolinska University Hospital, Dept. Cardiothoracic surgery | Stockholm, Sweden"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Michael Dismorr",
    "section": "Education",
    "text": "Education\nPhD, Cardiothoracic surgery epidemiology | 2017 - 2022\nKarolinska Institutet | Stockholm, Sweden\nMedical school, MD | 2011 - 2016\nKarolinska Institutet | Stockholm, Sweden\nGlobal health, field studies | 2015 - 2016\nKarolinska Institutet | Tanzania"
  }
]